//
//  EFShopCartModel.m
//  EF_MallDemo
//
//  Created by ylgwhyh on 16/6/20.
//  Copyright © 2016年 MH. All rights reserved.
//

#import "EFShopCartViewModel.h"
#import "EFShopCartRequest.h"

@implementation EFShopCartViewModel

/****************商城-购物车信息管理******************/
- (void)EFClearItems {
    EFClearItemsRequest *request = [EFClearItemsRequest requestWithPOST];

    [self startCallBack:^(CallBackStatus callBackStatus, NetworkModel *result) {
        [self delRequestWithTag:EFMailShopCart_ClearItems];
        if (callBackStatus == CallBackStatusRequestFailure) {
            //            [UIUtil alert:@"服务器出错"];
            return ;
        }else if (callBackStatus == CallBackStatusRequestError){
            
        }else if (callBackStatus == CallBackStatusSuccess){
            
        }
        [self.viewController callBackAction:EFMailShopCart_ClearItems Result:result];
    } Request:request WithTag:EFMailShopCart_ClearItems];
}

- (void)EFGetShopCartItems:(int)_page Size:(int) _size{
    _cartModelContentArray = [NSMutableArray array];
    EFViewControllerCallBackAction efViewControllerCallBackAction = EFMailShopCart_Items;
    EFGetShopCartItemsRequest *request = [EFGetShopCartItemsRequest requestWithPOST];
    request.page = _page;
    request.size = _size;
    
    [self startCallBack:^(CallBackStatus callBackStatus, NetworkModel *result) {
        
        
        [self delRequestWithTag:efViewControllerCallBackAction];
        if (callBackStatus == CallBackStatusRequestFailure) {
            //            [UIUtil alert:@"服务器出错"];
            return ;
        }else if (callBackStatus == CallBackStatusRequestError){
              [self.viewController callBackAction:efViewControllerCallBackAction Result:result];
        }else if (callBackStatus == CallBackStatusSuccess){
            if ([result.jsonDict[@"status"] intValue] == 200) {
                _cartModel = [EFCartModel yy_modelWithDictionary:result.jsonDict[@"content"]];
                [_cartModelContentArray removeAllObjects];
                for(int i=0; i<_cartModel.content.count; i++) {
                    ShopCartContentModel *shopCartContentModel = [ShopCartContentModel yy_modelWithJSON:_cartModel.content[i]];
                    [_cartModelContentArray addObject:shopCartContentModel];
                }
            }
        }
        [self.viewController callBackAction:efViewControllerCallBackAction Result:result];
    } Request:request WithTag:(int)efViewControllerCallBackAction];
}

/*从我的购物车当中删除购物项*/
- (void)EFRemoveItemsWithProductIds:(NSInteger)_productIds callBackBlock:(RequestCallBackBlock )callBackBlock {
    
    EFViewControllerCallBackAction efViewControllerCallBackAction = EFMailShopCart_RemoveItems;
    EFRemoveItemsRequest *request = [EFRemoveItemsRequest requestWithPOST];
    request.productIds = _productIds;
    
    [self startCallBack:^(CallBackStatus callBackStatus, NetworkModel *result) {
        
        
        [self delRequestWithTag:efViewControllerCallBackAction];
        if (callBackStatus == CallBackStatusRequestFailure) {
            //            [UIUtil alert:@"服务器出错"];
            return ;
        }else if (callBackStatus == CallBackStatusRequestError){
            
        }else if (callBackStatus == CallBackStatusSuccess){
            WS(weakSelf)
            weakSelf.requestCallBackBlock(callBackStatus, result);
        }
        [self.viewController callBackAction:efViewControllerCallBackAction Result:result];
    } Request:request WithTag:(int)efViewControllerCallBackAction];
}
/* 修改购物项目数量*/
- (void)UpdateItemQuantityWithProductId:(NSInteger)_productIds Quantity:(NSInteger)_quantity callBackBlock:(RequestCallBackBlock )callBackBlock{
    EFViewControllerCallBackAction efViewControllerCallBackAction = EFMailShopCart_UpdateItemQuantity;
    EFUpdateItemQuantityRequest *request = [EFUpdateItemQuantityRequest requestWithPOST];
    request.productId = _productIds;
    request.quantity = _quantity;
    
    [self startCallBack:^(CallBackStatus callBackStatus, NetworkModel *result) {
        
        [self delRequestWithTag:efViewControllerCallBackAction];
        if (callBackStatus == CallBackStatusRequestFailure) {
            //            [UIUtil alert:@"服务器出错"];
            return ;
        }else if (callBackStatus == CallBackStatusRequestError){
          
        }else if (callBackStatus == CallBackStatusSuccess){
            WS(weakSelf)
            weakSelf.requestCallBackBlock(callBackStatus, result);
        }
        [self.viewController callBackAction:efViewControllerCallBackAction Result:result];
        
    } Request:request WithTag:(int)efViewControllerCallBackAction];
}

@end
