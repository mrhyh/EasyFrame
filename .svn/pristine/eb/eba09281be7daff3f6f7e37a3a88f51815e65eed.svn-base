//
//  EFMallDetailsVC.m
//  EF_MallDemo
//
//  Created by MH on 16/6/13.
//  Copyright © 2016年 MH. All rights reserved.
//

#import "EFMallDetailsVC.h"
#import "EFMallDetailsTopCell.h"
#import "EFMallDetailsStoreCell.h"
#import "EFHpple.h"
#import "SVWebViewController.h"
#define SDEFMallDetailsTopCell @"EFMallDetailsTopCell"
#define SDEFMallDetailsStoreCell @"EFMallDetailsStoreCell"
@interface EFMallDetailsVC ()<UITableViewDataSource,UITableViewDelegate,UIWebViewDelegate>
@property (strong, nonatomic)KYTableView * table;
@property (nonatomic,assign)BOOL isStore;
@property (nonatomic,assign)int count;
@property (nonatomic,assign)float height;
@property (nonatomic,assign)BOOL isWeb;
@property (strong, nonatomic)NSMutableArray      * imageArray;

@end

@implementation EFMallDetailsVC

- (void)viewWillDisappear:(BOOL)animated{
   [self.navigationController setToolbarHidden:YES animated:YES];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"商品详情";
    self.view.backgroundColor = EF_BGColor_Primary;
    
    
    
    
    
    
    
    
    _isStore = [[NSDictionary alloc] initWithContentsOfFile:self.plistPath][@"Mall"][@"isStore"];
    if (_isStore) {
        _count = 3;
    }else{
        _count = 2;
    }
    _height = 0;
    _table = [[KYTableView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT) andUpBlock:^{
        [_table endLoading];
    } andDownBlock:^{
        [_table endLoading];
    }];
    [self.view addSubview:_table];
    _table.dataSource = self;
    _table.delegate = self;
    _table.backgroundColor = EF_BGColor_Primary;
    _table.separatorStyle = UITableViewCellAccessoryNone;
    [_table registerClass:[EFMallDetailsTopCell class] forCellReuseIdentifier:SDEFMallDetailsTopCell];
    [_table registerClass:[EFMallDetailsStoreCell class] forCellReuseIdentifier:SDEFMallDetailsStoreCell];
    [_table reloadData];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark TableViewDelegate


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 0) {
        EFMallDetailsTopCell *cell = [tableView dequeueReusableCellWithIdentifier:SDEFMallDetailsTopCell];
        cell.indexPath = indexPath;
        
        if (!cell.commentButtonClickedBlock) {
            [cell setCommentButtonClickedBlock:^(NSIndexPath *indexPath) {
                
            }];
        }
        
        //    if (self.listModel.content.count>0) {
        //        NewsContent * model = [NewsContent yy_modelWithDictionary:[(NSArray*)self.listModel.content objectAtIndex:indexPath.row]];
        //        cell.model = model;
        //    }
        
        return cell;
    }else if (indexPath.section == _count-1){
        UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"WebCell"];
        
        
        UIWebView * webView = [UIWebView new];
        webView.backgroundColor = [UIColor whiteColor];
        webView.scrollView.backgroundColor = [UIColor clearColor];
        webView.opaque = NO;
        webView.delegate = self;
        [cell addSubview:webView];
        
        UIView *contentView = cell;
        
        
        for (UIView *_aView in [webView subviews])
        {
            if ([_aView isKindOfClass:[UIScrollView class]])
            {
                [(UIScrollView *)_aView setShowsVerticalScrollIndicator:NO];
                //右侧的滚动条
                
                [(UIScrollView *)_aView setShowsHorizontalScrollIndicator:NO];
                //下侧的滚动条
                
                for (UIView *_inScrollview in _aView.subviews)
                {
                    if ([_inScrollview isKindOfClass:[UIImageView class]])
                    {
                        _inScrollview.hidden = YES;  //上下滚动出边界时的黑色的图片
                    }
                }
            }
        }
        
        webView.sd_layout
        .leftEqualToView(contentView)
        .topEqualToView(contentView)
        .rightEqualToView(contentView)
        .bottomEqualToView(contentView);

        
        NSString *date = [NSString stringWithFormat:@"<a href='http://my.oschina.net/duxinfeng'>%@</a> 测试时间 %@ <img src='http://www.sjqcj.com/data/upload/2016/0612/23/575d81ad94868.jpg' width=100%%>",@"莫杭",@"2016-06-14" ];
//        if ([rangestrw rangeOfString:@"src"].location !=NSNotFound) {
//            rangestrw = [WebUtil getNormalImage:rangestrw];
//        }
        [self loadWebImaegs:date];
       
        date = [NSString stringWithFormat:@"<html><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\"/><body style=\"padding:0px;\">%@<br><br></body></html>",date];
        NSString *html_str = date;
        [webView loadHTMLString:html_str baseURL:nil];

        
        return cell;
    }else{
        EFMallDetailsStoreCell *cell = [tableView dequeueReusableCellWithIdentifier:SDEFMallDetailsStoreCell];
        cell.indexPath = indexPath;
        
        if (!cell.phoneButtonClickedBlock) {
            [cell setPhoneButtonClickedBlock:^(NSIndexPath *indexPath) {
                NSURL *url=[NSURL URLWithString:[NSString stringWithFormat:@"telprompt://%@",@"110"]];
                [[UIApplication sharedApplication]openURL:url];
            }];
        }
        
        //    if (self.listModel.content.count>0) {
        //        NewsContent * model = [NewsContent yy_modelWithDictionary:[(NSArray*)self.listModel.content objectAtIndex:indexPath.row]];
        //        cell.model = model;
        //    }
        
        return cell;
    }
}




- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 1;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return _count;
}


- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView * headView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 30)];
    headView.backgroundColor = HEX_COLOR(@"#f6f6f6");
    NSArray * arr;
    if (_isStore) {
         arr = @[@"机构信息",@"商品信息"];
    }else{
        arr = @[@"商品信息"];
    }
    
    KYMHLabel * label = [KYMHLabel new];
    label.text = arr[section-1];
    label.textColor =  EF_TextColor_TextColorSecondary;
    label.textAlignment = NSTextAlignmentLeft;
    label.font = [UIFont systemFontOfSize:15];
    [headView addSubview:label];
    
    label.sd_layout.leftSpaceToView(headView,10).topEqualToView(headView).widthIs(100).heightIs(30);
    
    return headView;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (_isStore&&section==0) {
        return 0;
    }
    return 30;
}

- (UIView*)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    UIView * lineView = [UIView new];
    lineView.backgroundColor = EF_TextColor_TextColorSecondary;
    
    lineView.sd_layout
    .leftEqualToView(self.view)
    .rightEqualToView(self.view)
    .topEqualToView(self.view)
    .heightIs(10);
    return lineView;
}


-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (section==_count-1) {
        return 0;
    }
    return 10;
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (_isStore&&indexPath.section == 0) {
        return 290;
    }else if (indexPath.section == _count-1) {
        return _height;
    }
    return 80;
//    id model;
    ////    if (self.listModel.content>0) {
    ////        model = [NewsContent yy_modelWithDictionary:[(NSArray*)self.listModel.content objectAtIndex:indexPath.row]];
    ////    }
    //    return [self.table cellHeightForIndexPath:indexPath model:model keyPath:@"model" cellClass:[EFMallCell class] contentViewWidth:[self cellContentViewWith]];
}

- (CGFloat)cellContentViewWith
{
    CGFloat width = [UIScreen mainScreen].bounds.size.width;
    // 适配ios7
    if ([UIApplication sharedApplication].statusBarOrientation != UIInterfaceOrientationPortrait && [[UIDevice currentDevice].systemVersion floatValue] < 8) {
        width = [UIScreen mainScreen].bounds.size.height;
    }
    return width;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
}

- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType{
    NSURL *url = [request URL];
    
    NSString *urlStr = [url absoluteString];
    NSLog(@"-----url------%@",urlStr);
    
    if ([urlStr isEqualToString:@"about:blank"]) {
        return YES;
    }
    
    
    if ([urlStr rangeOfString:@"jpg"].location !=NSNotFound) {
        for (int i = 0; i < self.imageArray.count; i++) {
            NSString * imaUrl = self.imageArray[i];
            if ([imaUrl isEqualToString:urlStr]) {
                EF_AlbumView * img = [[EF_AlbumView alloc]initWithArr:self.imageArray andFrame:CGRectMake(0,(SCREEN_HEIGHT-SCREEN_WIDTH)/2, SCREEN_WIDTH, SCREEN_WIDTH) andIndex:i];
                [[UIApplication sharedApplication].keyWindow addSubview:img];
            }
        };
        return NO;
    }else{
        SVWebViewController *webViewController = [[SVWebViewController alloc] initWithURL:url];
        [self.navigationController pushViewController:webViewController animated:YES];
        return NO;
    }
    
}


- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    // finished loading, hide the activity indicator in the status bar
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    [webView stringByEvaluatingJavaScriptFromString:
     @"var script = document.createElement('script');"
     "script.type = 'text/javascript';"
     "script.text = \"function ResizeImages() { "
     "for(i=0;i < document.images.length;i++){"
     "var myimg = document.images[i];var touchopen = 1;"
     "var imagelink = document.createElement('a');"
     "imagelink.href=myimg.src;"
     "var imageparent = myimg.parentNode;"
     "if(imageparent.tagName!='A'){"
     "imageparent.insertBefore(imagelink,myimg);"
     "imagelink.appendChild(myimg);}"
     "}"
     "}\";"
     "document.getElementsByTagName('head')[0].appendChild(script);"];
    
    [webView stringByEvaluatingJavaScriptFromString:@"ResizeImages();"];
    
    _height = [[webView stringByEvaluatingJavaScriptFromString:@"document.body.offsetHeight"] floatValue];
    if (!_isWeb) {
        _isWeb = YES;
        [_table reloadData];
    }
  
}

- (void)loadWebImaegs:(NSString *)_htmlContent{
    self.imageArray = [NSMutableArray array];
    NSData *htmlData = [_htmlContent dataUsingEncoding:NSUTF8StringEncoding];
    EFHpple *xpathParser = [[EFHpple alloc] initWithHTMLData:htmlData];
    NSArray *elements  = [xpathParser searchWithXPathQuery:@"//img[@src]"];
    NSArray *elements2  = [xpathParser searchWithXPathQuery:@"//a/img[@src]"];
    for (int i =0 ; i < [elements count]; i++) {
        EFHppleElement *element = [elements objectAtIndex:i];
        NSString *url = [element objectForKey:@"src"];
        for (int i =0 ; i < [elements2 count]; i++) {
            if([url isEqualToString:[[elements objectAtIndex:i] objectForKey:@"src"]]) {
                element = nil;
                break;
            }
        }
        if (!element) {
            continue;
        }
        [self.imageArray addObject:url];
    }
}


@end
