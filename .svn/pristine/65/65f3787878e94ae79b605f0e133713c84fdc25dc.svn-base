//
//  EFOrderDetailVC.m
//  EF_MallDemo
//
//  Created by ylgwhyh on 16/6/14.
//  Copyright © 2016年 MH. All rights reserved.
//

#import "EFOrderDetailVC.h"
#import "EFGoodModel.h"
#import "EFGoodsCell.h"
#import "EFGoodsTwoCell.h"
#import "EFOrderStatusCell.h"
#import "EFMallDetailsStoreCell.h"
#import "EFOrderInfoCell.h"
#import "EFOrderDetailTwoCell.h"
#import "EFShopCartViewModel.h"
#import "EFOrderDetailCell.h"
#import "EFOrderConfirmTwoVC.h"

@interface EFOrderDetailVC () <UITableViewDataSource, UITableViewDelegate>

@property (nonatomic, strong) NSMutableArray *dataSource;
@property (nonatomic, strong) KYTableView *tableView;
@property (nonatomic, strong) UIColor *mainBGColor;


@property (nonatomic, strong) NSArray *nameArray;
@property (nonatomic, strong) NSArray *orderinfoLeftArray;
@property (nonatomic, strong) NSMutableArray *orderinfoRightArray;

@property (nonatomic, strong) EFShopCartViewModel *viewModel;
@property (nonatomic, strong) KYMHLabel *noDataLabel;

@property (strong, nonatomic) UIView *backgroundView;  //底部View
@property (strong, nonatomic)  KYMHButton *rightButton;

@end

@implementation EFOrderDetailVC {
    
    CGFloat segmentH;
    CGFloat spaceToLeft;
    CGFloat sectionViewH;
    CGFloat sectionImageH;
    CGFloat sectionFontSize;
    CGFloat bottomViewH;
}

typedef NS_ENUM(NSInteger, EFOrderDetailVCSectionNS_ENUM) {
    
    EFOrderDetailVCSectionNS_ENUM_OrderStatus=0,
    EFOrderDetailVCSectionNS_ENUM_GoodInfo,
    EFOrderDetailVCSectionNS_ENUM_Business,
    EFOrderDetailVCSectionNS_ENUM_OrderInfo,
    EFOrderDetailVCSectionNS_ENUM_GoodStatus
};

static NSString * const OrderCell = @"EFMyOrderVCGoodCell";
static NSString * const OrderCellEFGoodsTwoCell = @"EFGoodsTwoCell";
static NSString * const EFGoodsTwoCellEFOrderStatusCell = @"EFOrderDetailVCEFOrderStatusCellEFGoodsTwoCell";
static NSString * const EFMallDetailsStoreCellEFGoodsTwoCell = @"EFMallDetailsStoreCellEFGoodsTwoCell";
static NSString * const OrderInfoCellEFGoodsTwoCell = @"OrderInfoCellEFGoodsTwoCell";
static NSString * const GoodStatusCellEFGoodsTwoCell = @"GoodStatusCellEFGoodsTwoCell";

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self initDataSource];
    
    [self.viewModel GetOrderById:_orderId];
    // Do any additional setup after loading the view.
}

- (void) initDataSource {
    
    self.title = @"订单详情";
    self.view.backgroundColor = RGBColor(239, 244, 248);
    self.automaticallyAdjustsScrollViewInsets = NO;
    _mainBGColor = EF_MainColor;
    
#warning TODO 暂时重写返回根控制器，实际应该是从“确认下单”进入的应该返回根控制器，其他界面进入的返回上个控制器
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]
                                             initWithTitle:@"返回" style: UIBarButtonItemStyleBordered
                                             target:self action:@selector(dismissMyView)];
    
    
    
    self.viewModel = [[EFShopCartViewModel alloc]initWithViewController:self];
    
    _orderinfoRightArray = [NSMutableArray array];
    segmentH = 40;
    spaceToLeft = 10;
    sectionViewH = 30;
    sectionImageH = 17;
    sectionFontSize = 13;
    bottomViewH = 49;
    
    _nameArray = @[@"订单状态",@"商品信息", @"商家", @"订单信息", @" "];
    _orderinfoLeftArray = @[@"联系人",@"联系电话", @"寄送地址", @"支付方式", @"下单时间 "];
    //_orderinfoRightArray = @[@"何鸠",@"186-9019-3064", @"成都市武侯区玉林七巷18号1单元507室", @"我的钱包", @"2016-06-07 10:28"];

}

- (void)dismissMyView {
    [self.navigationController popToRootViewControllerAnimated:YES];
}


- (KYTableView *)createUITableView{
    
    //创建底部视图
    [self setupCustomBottomView];
    
    WS(weakSelf)
    if (!_tableView) {
        _tableView = [[KYTableView alloc]initWithFrame:CGRectMake(0, 11+64, SCREEN_WIDTH, SCREEN_HEIGHT-11-64-bottomViewH) andUpBlock:^{
             [self.viewModel GetOrderById:_orderId];
        } andDownBlock:^{
            [weakSelf.tableView endLoading];
        }];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        [_tableView registerClass:[EFGoodsCell class] forCellReuseIdentifier:OrderCell];
        [_tableView registerClass:[EFOrderDetailTwoCell class] forCellReuseIdentifier:OrderCellEFGoodsTwoCell];
        [_tableView registerClass:[EFOrderStatusCell class] forCellReuseIdentifier:EFGoodsTwoCellEFOrderStatusCell];
        [_tableView registerClass:[EFMallDetailsStoreCell class] forCellReuseIdentifier:EFMallDetailsStoreCellEFGoodsTwoCell];
        [_tableView registerClass:[EFOrderInfoCell class] forCellReuseIdentifier:OrderInfoCellEFGoodsTwoCell];
        [self.view addSubview:_tableView];
        
    }
    
    if(self.viewModel.orderDetailModel.orderProduct.count  <= 0){
        
        if(_noDataLabel == nil){
            _noDataLabel = [[KYMHLabel alloc] initWithTitle:@"暂无数据，下拉刷新" BaseSize:CGRectMake(0,0,SCREEN_WIDTH, SCREEN_H_RATE*15) LabelColor: [UIColor clearColor] LabelFont:16 LabelTitleColor:[UIColor grayColor] TextAlignment:NSTextAlignmentCenter];
            _noDataLabel.center = CGPointMake(SCREEN_WIDTH/2, SCREEN_HEIGHT/5*2);
            [_tableView addSubview:_noDataLabel];
        }
    }else {
        if(_noDataLabel != nil) {
            [_noDataLabel removeFromSuperview];
            _noDataLabel = nil;
        }
        [_tableView reloadData];
    }
    return _tableView;
}


- (void) setupCustomBottomView {

    if( _backgroundView == nil ) {
        
        _backgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, bottomViewH)];
        _backgroundView.backgroundColor = [UIColor whiteColor];
        [self.view addSubview:_backgroundView];
        
        UIView *lineView = [UIView new];
        _rightButton = [KYMHButton new];
        lineView.backgroundColor = EF_TextColor_TextColorSecondary;
        [_backgroundView addSubview:lineView];
        
        _rightButton.backgroundColor = RGBColor(25, 182, 23);
        _rightButton.layer.cornerRadius = 5;
        _rightButton.titleLabel.font = Font(14);
        [_rightButton setTitle:@"确认收货" forState:UIControlStateNormal];
        [_backgroundView addSubview:_rightButton];
        
        lineView.sd_layout
        .topSpaceToView(_backgroundView, 0)
        .widthIs(SCREEN_WIDTH)
        .heightIs(1);
        
        CGFloat spaceToTop = (bottomViewH-36)/2;
        _rightButton.sd_layout
        .topSpaceToView (lineView, spaceToTop)
        .rightSpaceToView(_backgroundView, 10)
        .widthIs (95)
        .heightIs(36);
    }

}

#pragma mark - Table view data source

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_OrderStatus) {
        
        EFOrderStatusCell *cell = [tableView dequeueReusableCellWithIdentifier:EFGoodsTwoCellEFOrderStatusCell];
        cell.orderStatus = self.viewModel.orderDetailModel.orderStatus;
        
        return cell;
        
    }else if (indexPath.section == EFOrderDetailVCSectionNS_ENUM_GoodInfo) {
        
        OrderproductModel *orderProduct = _dataSource[indexPath.row] ;
        
        EFOrderDetailCell *cell = [tableView dequeueReusableCellWithIdentifier:OrderCell];
        cell.orderproductModel = orderProduct;
        
        if(indexPath.row+1 == _dataSource.count) { //最后一行添加一个View
            
            
            NSString *sumString = [NSString stringWithFormat:@"￥%ld",self.viewModel.orderDetailModel.price];
            CGFloat rowBottomViewH = 49;
            
            UIColor *lableColor = EF_TextColor_TextColorPrimary;
            UIView *rowBottomView = [[UIView alloc] initWithFrame:CGRectMake(0, 40, SCREEN_WIDTH, rowBottomViewH)];
            [cell addSubview:rowBottomView];
            
            CGFloat labelY = 45;
            KYMHLabel *leftLabel = [[KYMHLabel alloc] initWithTitle:@"实付款" BaseSize:CGRectMake(spaceToLeft, labelY, 70, 20) LabelColor:nil LabelFont:15 LabelTitleColor:lableColor TextAlignment:NSTextAlignmentLeft];
            [rowBottomView addSubview:leftLabel];
            
            CGFloat rightLabelW = SCREEN_WIDTH/2;
            KYMHLabel *rightLabel = [[KYMHLabel alloc] initWithTitle:sumString BaseSize:CGRectMake(SCREEN_WIDTH -rightLabelW-spaceToLeft , labelY, rightLabelW, 20) LabelColor:nil LabelFont:16 LabelTitleColor:lableColor TextAlignment:NSTextAlignmentRight];
            [rightLabel FontWeight:20];
            [rowBottomView addSubview:rightLabel];
        }
        
        return cell;
        
    }else if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_Business) {
        
        EFMallDetailsStoreCell *cell = [tableView dequeueReusableCellWithIdentifier:EFMallDetailsStoreCellEFGoodsTwoCell];
        OrderShop *orderShop  = self.viewModel.orderDetailModel.shop;
        cell.orderShop = orderShop;
        cell.indexPath = indexPath;
        if (!cell.phoneButtonClickedBlock) {
            [cell setPhoneButtonClickedBlock:^(NSIndexPath *indexPath) {
                
            }];
        }
        return cell;
        
    }else if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_OrderInfo) {
        
        EFOrderInfoCell *cell = [tableView dequeueReusableCellWithIdentifier:OrderInfoCellEFGoodsTwoCell];
        cell.leftLabel.text = _orderinfoLeftArray[indexPath.row];
        cell.rightLabel.text = _orderinfoRightArray[indexPath.row];
        
        if(indexPath.row+1 == _orderinfoLeftArray.count) {
            cell.lineView.hidden = YES;
        }else {
            cell.lineView.hidden = NO;
        }
        return cell;
        
    }else {
        
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:GoodStatusCellEFGoodsTwoCell];
       
        if(!cell){
            cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:GoodStatusCellEFGoodsTwoCell];
        }
        
        CGFloat bottomViewH = 49;
        UIView *bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, bottomViewH)];
        [cell addSubview:bottomView];
        
        UIView *lineView = [UIView new];
        KYMHButton *goodStatusButton = [KYMHButton new];
        lineView.backgroundColor = EF_TextColor_TextColorSecondary;
        [bottomView addSubview:lineView];
        
        goodStatusButton.backgroundColor = RGBColor(25, 182, 23);
        goodStatusButton.layer.cornerRadius = 5;
        goodStatusButton.titleLabel.font = Font(14);
        [goodStatusButton setTitle:@"确认收货" forState:UIControlStateNormal];
        [bottomView addSubview:goodStatusButton];
        
        lineView.sd_layout
        .topSpaceToView(bottomView, 0)
        .widthIs(SCREEN_WIDTH)
        .heightIs(1);
        
        CGFloat spaceToTop = (bottomViewH-36)/2;
        goodStatusButton.sd_layout
        .topSpaceToView (lineView, spaceToTop)
        .rightSpaceToView(bottomView, 10)
        .widthIs (95)
        .heightIs(36);
        
        return cell;
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if(section == EFOrderDetailVCSectionNS_ENUM_OrderStatus ||
       section == EFOrderDetailVCSectionNS_ENUM_GoodStatus ) {
        return 1;
    }else if (section == EFOrderDetailVCSectionNS_ENUM_GoodInfo) {
        return _dataSource.count;
    }else  if(section == EFOrderDetailVCSectionNS_ENUM_OrderInfo) {
        return _orderinfoLeftArray.count;
    }else {
        return 1;
    }
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return 5;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_OrderStatus) {
        return 79;
    }else if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_GoodInfo) {
        if(indexPath.row+1 != _dataSource.count) {
            return 81;
        } else {
            return 120;
        }
        
    }else if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_Business) {
        
        return 91;
    }else if(indexPath.section == EFOrderDetailVCSectionNS_ENUM_OrderInfo) {
        
        return 44;
        
    }else {
        return 49;
    }
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    UIView *headView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, sectionViewH)];
    headView.backgroundColor = RGBColor(248, 249, 248);
    
    KYMHLabel *nameLabel = [KYMHLabel new];
    nameLabel.textColor = EF_TextColor_TextColorPrimary;
    nameLabel.textAlignment = NSTextAlignmentLeft;
    nameLabel.font = Font(sectionFontSize);
    
    [headView addSubview:nameLabel];

    //更新数据
    if(section < _nameArray.count){
        nameLabel.text = _nameArray[section];
    }
    //布局
    CGFloat spaceToTop = (sectionViewH-sectionImageH)/2;

    nameLabel.sd_layout
    .leftSpaceToView(headView, spaceToLeft)
    .topSpaceToView(headView, spaceToTop)
    .heightIs(sectionImageH);
    [nameLabel setSingleLineAutoResizeWithMaxWidth:200];
    
    return headView;
}

-(CGFloat )tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    
    return sectionViewH;
}

#pragma mark scrollViewDelegate
/*
- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    
    if (scrollView == self.tableView) {
        CGFloat sectionHeaderHeight = sectionViewH;
        if (scrollView.contentOffset.y <= sectionHeaderHeight && scrollView.contentOffset.y >= 0) {
            
            scrollView.contentInset = UIEdgeInsetsMake(-scrollView.contentOffset.y, 0, 0, 0);
            
        } else if (scrollView.contentOffset.y >= sectionHeaderHeight) {
            
            scrollView.contentInset = UIEdgeInsetsMake(-sectionHeaderHeight, 0, 0, 0);
            
        }
    }
}
 */


#pragma mark ViewModel 回调
- (void)callBackAction:(EFViewControllerCallBackAction)action Result:(NetworkModel *)result{
    
    if (action & EFMailShopCart_GetOrderById) {
        [self.tableView endLoading];
        if ([result.jsonDict[@"status"] intValue] == 200) {
            
            [_dataSource removeAllObjects];
            for (int i=0; i<self.viewModel.orderDetailModel.orderProduct.count; i++) {
            OrderproductModel  *model = [OrderproductModel yy_modelWithJSON:self.viewModel.orderDetailModel.orderProduct[i]];
                [_dataSource addObject:model];
            }
            
            long long time = self.viewModel.orderDetailModel.createTime;
            NSDate * data = [NSDate dateWithTimeIntervalSince1970:time/1000.0];
            NSString *timeString = [UIUtil prettyDateNoChangeWithReference:data];
            
            [_orderinfoRightArray addObject: [self returnString:self.viewModel.orderDetailModel.consignee]];
            [_orderinfoRightArray addObject: [self returnString:self.viewModel.orderDetailModel.phone]];
            [_orderinfoRightArray addObject: [self returnString:self.viewModel.orderDetailModel.address]];
            [_orderinfoRightArray addObject: @"我的钱包"];
            [_orderinfoRightArray addObject: [self returnString:timeString]];
        }
        [self createUITableView];
    }
}

- (NSString *) returnString: (NSString *)string {
    if([string isEqualToString:@""] || string == nil) {
        return @"--";
    }else {
        return string;
    }
}

- (void)dealloc
{
    if (self.viewModel) {
        [self.viewModel cancelAndClearAll];
        self.viewModel = nil;
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
